The TerraForm is a tool that is used for writing Infrastructure as code.

You define the infrastructure that you want to manage via a code file.

So the first step in the TerraForm workflow is to define that code file.

This is actually known as a TerraForm configuration file.

For example, let's say you want to build an environment that has an application server and a database server.

You define the aspects about these servers within your TerraForm configuration file.

The next step is the planning phase TerraForm plan.

Let's say that you have an empty environment, right?

In your production based environment, you don't have any resources.

That's why in your TerraForm configuration file you have defined saying that you want to have an application

server and a database server running as part of that environment.

At the moment, you don't have anything. In the TerraForm Plan phase

What TerraForm does is it looks at your configuration file, it looks at your environment, and then

decides what needs to be deployed or what needs to be changed.

It will check here that, yes, your environment does not have a database server.

It does not have an application server.

That's why it needs to deploy a new application server and a new database server.

It also maintains a state file so that whenever you want to run this configuration file again, it understands

what is a current state of your environment.

Does it already have the resources this so that it does not do the deployment again

Because you can't run your TerraForm configuration files multiple times and when you run it multiple times,

you don't want TerraForm to keep on creating the same resources if it already exists.

That's why it maintains a state file, because it understands that what is a current state of your environment?

And the final step of the workflow is the apply command wherein TerraForm will apply all of the changes

as per the TerraForm configuration file.

So if your TerraForm configuration file is defining an application server and a database server,

this will be deployed as part of your environment.

Now, when we are going to build our TerraForm configuration files and do the phase of planning and

applying, we'll be doing it on a local machine.

So I'll be doing it on my laptop.

In order to do this, you have to download a TerraForm binary file.

The TerraForm Binary file is then responsible for the planning phase and for applying whatever is part of your configuration file.

So again, when it comes on to the code terraform workflow, you have the writing phase here, you create the code configuration file, you have the planning phase here

You see the changes that are going to be made by TerraForm. And then you have the applied phase where you apply the changes. The terraform configuration

This is the complete document in the TerraForm language.

This tells TerraForm how to manage the infrastructure.

You have different providers.

These are plugins for TerraForm.

This helps TerraForm to work with multiple cloud providers and not only cloud providers with other software

as a service providers as well.
